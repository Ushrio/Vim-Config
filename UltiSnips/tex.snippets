# Add context to snippets
global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'V', 'W', 'X', 'Y', 'Z']]
# If you have http://www.drchip.org/astronaut/vim/vbafiles/amsmath.vba.gz,
# you want to add:
# texMathZones += ['texMathZone'+x for x in ['E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS']]
texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

def math():
    synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
    if not set(texIgnoreMathZoneIds).isdisjoint(synstackids):
        return False
    return not set(texMathZoneIds).isdisjoint(synstackids)
    # isdisjoint() can short-circuit as soon as a match is found

endglobal

# Snippet to create both begin and end blocks
snippet beg "begin{} / end{}" b
\begin{$1}
	$0
\end{$1}
endsnippet

# Snippet to fill in boiler plate at beginning
snippet article "documentclass{article}" b
\documentclass[$1]{article}

\title{$2}
\author{$3}
\date{`date +%m-%d-%Y`}

\begin{document}
\maketitle
$0
\end{document}

endsnippet

# Snippet to create an emphasized part of text
snippet "emph" "emph" ri
\emph{$1}$0
endsnippet

# Snippet for bolding text
snippet "bold" "bold" ri
\textbf{$1}$0
endsnippet

# Snippet to add inline math
priority 100
snippet mk "Math" w
$${1}$ $0
endsnippet

# Snippet to add display line math
snippet dm "Math" w
$$
	$1
$$$0 
endsnippet

# Snippets to add square root, cube root, complement, and superscript
context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet Ss "superscript" iA
^{$0}
endsnippet

context "math()"
snippet ss "subscript" iA
_{$1}$0
endsnippet

# Auto add fraction with //
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

# Snippets for setting bar, hat, and vector characters
context "math()"
priority 10
snippet "bar" "bar" riA
\overline{$0}
endsnippet

context "math()"
priority 10
snippet "hat" "hat" riA
\hat{$0}
endsnippet

context "math()"
priority 10
snippet "vec" "vec" riA
\vec{$1}$0
endsnippet

context "math()"
priority 10
snippet "lim" "lim" riA
\lim_{$0}
endsnippet

context "math()"
priority 10
snippet "summation" "Riemann sum" riA
\sum_{$1}^{$2}$0
endsnippet

# Snippets for settings math Greek characters
context "math()"
priority 10
snippet "theta" "theta" riA
\theta$0
endsnippet

context "math()"
priority 10
snippet "pi" "pi" riA
\pi$0
endsnippet

context "math()"
priority 10
snippet "Delta" "Delta" riA
\Delta$0
endsnippet

