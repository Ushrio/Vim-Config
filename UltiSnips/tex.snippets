# Add context to snippets
global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
    return x != '0' and x != '0'

endglobal

# Snippet to create both begin and end blocks
snippet beg "begin{} / end{}" b
\begin{$1}
	$0
\end{$1}
endsnippet

# Snippet to fill in boiler plate at beginning
snippet article "documentclass{article}" b
\documentclass[$1]{article}

\title{$2}
\author{$3}
\date{`date +%m-%d-%Y`}

\begin{document}
\maketitle
$0
\end{document}

endsnippet

# Snippet to create an emphasized part of text
snippet "emph" "emph" ri
\emph{$1}$0
endsnippet

# Snippet to add inline math
priority 100
snippet mk "Math" w
$${1}$ $0
endsnippet

# Snippet to add display line math
snippet dm "Math" w
$$
	$1
$$$0 
endsnippet

# Snippets to add square root, cube root, complement, and superscript
context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet Ss "superscript" iA
^{$0}
endsnippet

context "math()"
snippet ss "subscript" iA
_{$1}$0
endsnippet

# Auto add fraction with //
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

# Snippets for setting bar, hat, and vector characters
context "math()"
priority 10
snippet "bar" "bar" riA
\overline{$0}
endsnippet

context "math()"
priority 10
snippet "hat" "hat" riA
\hat{$0}
endsnippet

context "math()"
priority 10
snippet "vec" "vec" riA
\vec{$1}$0
endsnippet

context "math()"
priority 10
snippet "lim" "lim" riA
\lim_{$0}
endsnippet

context "math()"
priority 10
snippet "summation" "Riemann sum" riA
\sum_{$1}^{$2}$0
endsnippet

# Snippets for settings math Greek characters
context "math()"
priority 10
snippet "theta" "theta" riA
\theta$0
endsnippet

context "math()"
priority 10
snippet "pi" "pi" riA
\pi$0
endsnippet

context "math()"
priority 10
snippet "Delta" "Delta" riA
\Delta$0
endsnippet

